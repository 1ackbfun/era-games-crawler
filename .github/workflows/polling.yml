name: polling

on:
  schedule:
    - cron: "0 * * * *"
  workflow_dispatch:
    inputs:
      task_mode:
        description: 'Task Mode'
        required: true
        default: 'debug'
        type: choice
        options:
        - default
        - debug

jobs:
  exec_task:
    runs-on: ubuntu-latest

    steps:
      - name: 1. Check out repository
        uses: actions/checkout@v3

      - name: 2. Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: 3. Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: 4. Install library
        run: poetry install --no-interaction

      - name: 5. Configure project
        run: |
          cp config.example.json config.json
          sed -i 's@"enable":\s*false@"enable": true@g' config.json
          sed -i 's@"webhook":\s*""@"webhook": "${dc_webhook}"@' config.json
          sed -i 's@"bot_token":\s*""@"bot_token": "${tg_bot_token}"@' config.json
          sed -i 's@"channel_id":\s*""@"channel_id": "${tg_channel_id}"@' config.json
        env:
          dc_webhook: ${{ secrets.DISCORD_WEBHOOK }}
          tg_bot_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          tg_channel_id: ${{ secrets.TELEGRAM_CHANNEL_ID }}

      - name: 6. Check debug mode
        run: |
          sed -i 's@"debug":\s*false@"debug": true@' config.json
        if: ${{ inputs.task_mode == 'debug' }}

      - name:76. Run task
        run: poetry run task
